<?xml version="1.0" encoding="UTF-8"?>
<!--
    JBoss, Home of Professional Open Source
    Copyright 2014, Red Hat, Inc. and/or its affiliates, and individual
    contributors by the @authors tag. See the copyright.txt in the
    distribution for a full listing of individual contributors.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.github.santiagoangel.openshift</groupId>
    <artifactId>openshift-javaee-dev</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>openshift-javaee-dev</name>
    <description>Openshift-javaee-dev. HTML5/ Java EE 6 application with JPA, JAX-RS, Bean validation, security &amp; PatternFly.</description>

    <url>https://github.com/santiagoangel/openshift-javaee-dev</url>
    <properties>
        <!-- Explicitly declaring the source encoding eliminates the following 
            message: -->
        <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered 
            resources, i.e. build is platform dependent! -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- JBoss AS dependency versions -->
		<version.jboss.maven.plugin>7.4.Final</version.jboss.maven.plugin>

		<!-- WildFly dependency versions -->
		<version.wildfly.maven.plugin>1.0.1.Final</version.wildfly.maven.plugin>

		<!-- PicketLink dependency versions -->
		<version.picketlink.javaee.bom>2.7.1.Final</version.picketlink.javaee.bom>



		<!-- apache deltaspike -->
		<version.deltaspike>1.0.1</version.deltaspike>
	    
	        <!-- other plugin versions -->
                <version.surefire.plugin>2.10</version.surefire.plugin>
                <version.war.plugin>2.1.1</version.war.plugin>

		<!-- maven-compiler-plugin -->
		<version.compiler.plugin>3.1</version.compiler.plugin>
		<maven.compiler.target>1.6</maven.compiler.target>
		<maven.compiler.source>1.6</maven.compiler.source>
    </properties>
	<repositories>
		<repository>
			<id>JBoss repository</id>
			<url>http://repository.jboss.org/nexus/content/groups/public/</url>
		</repository>
		<repository>
			<id>Red hat</id>
			<url>https://maven.repository.redhat.com/techpreview/all/</url>
		</repository>
	</repositories>
	<dependencyManagement>
		<dependencies>
			<!-- Dependency Management for PicketLink and Apache Deltaspike. -->
			<dependency>
				<groupId>org.picketlink</groupId>
				<artifactId>picketlink-javaee-6.0</artifactId>
				<version>${version.picketlink.javaee.bom}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<!-- PicketLink Uber Dependency. It provides all PicketLink dependencies 
			from a single JAR. You still can define each module separately, if you want 
			to. -->
		<dependency>
			<groupId>org.picketlink</groupId>
			<artifactId>picketlink</artifactId>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.picketlink</groupId>
			<artifactId>picketlink-idm-simple-schema</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.spec.javax.annotation</groupId>
			<artifactId>jboss-annotations-api_1.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.0.1</version>
		</dependency>

		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.9</version>
		</dependency>

		<!-- for jar -->
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>javax.annotation-api</artifactId>
			<version>1.2</version>
		</dependency>

		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.0.0.GA</version>
		</dependency>

		<dependency>
			<groupId>org.glassfish.hk2.external</groupId>
			<artifactId>javax.inject</artifactId>
			<version>2.4.0-b31</version>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>

			<version>1.2.17</version>
		</dependency>

		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.2</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.5</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.5</version>
		</dependency>
		<!-- ends for jar -->

		<dependency>
			<groupId>org.jboss.spec.javax.ejb</groupId>
			<artifactId>jboss-ejb-api_3.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.spec.javax.transaction</groupId>
			<artifactId>jboss-transaction-api_1.1_spec</artifactId>
			<version>1.0.1.Final</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.logging</groupId>
			<artifactId>jboss-logging</artifactId>
			<version>3.1.4.GA</version>
		</dependency>



		<dependency>
			<groupId>org.jboss.spec.javax.servlet</groupId>
			<artifactId>jboss-servlet-api_3.0_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>




		





		<!-- Hibernate JPA -->
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<version>1.0.1.Final</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>4.2.18.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>4.2.18.Final</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>4.2.0.Final</version>
			<exclusions>
				<exclusion>
					<artifactId>slf4j-api</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- cache -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-ehcache</artifactId>
			<version>4.2.18.Final</version>
			<exclusions>
				<exclusion>
					<groupId>net.sf.ehcache</groupId>
					<artifactId>ehcache-core</artifactId>
				</exclusion>
			</exclusions>

		</dependency>

		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache</artifactId>
			<version>2.10.2</version>
			<exclusions>
				<exclusion>
					<artifactId>slf4j-api</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.infinispan</groupId>
			<artifactId>infinispan-core</artifactId>
			<version>7.1.1.Final</version>

		</dependency>
		<dependency>
			<groupId>org.infinispan</groupId>
			<artifactId>infinispan-cdi</artifactId>
			<version>7.1.1.Final</version>

		</dependency>

		<dependency>
			<groupId>org.infinispan</groupId>
			<artifactId>infinispan-cachestore-jdbc</artifactId>
			<version>7.1.1.Final</version>
		</dependency>
		<!-- ends cache -->


		<!-- ends Hibernate JPA -->



		<!-- Deltaspike modules -->

		<dependency>
			<groupId>org.apache.deltaspike.modules</groupId>
			<artifactId>deltaspike-servlet-module-api</artifactId>
			<version>${version.deltaspike}</version>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>org.apache.deltaspike.core</groupId>
					<artifactId>deltaspike-core-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.apache.deltaspike.modules</groupId>
			<artifactId>deltaspike-servlet-module-impl</artifactId>
			<version>${version.deltaspike}</version>
			<scope>runtime</scope>
			<exclusions>
				<exclusion>
					<groupId>org.apache.deltaspike.core</groupId>
					<artifactId>deltaspike-core-impl</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.deltaspike.core</groupId>
					<artifactId>deltaspike-core-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>






		<!-- ends Deltaspike modules -->

		<!-- JOSE & JWT -->

		<dependency>
			<groupId>com.nimbusds</groupId>
			<artifactId>nimbus-jose-jwt</artifactId>
			<classifier>jdk16</classifier>
			<version>4.11.2</version>
		</dependency>

		<!-- ends JOSE & JWT -->

		<!-- The Legion of the Bouncy Castle -->

		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcprov-jdk15on</artifactId>
			<version>1.54</version>
		</dependency>

		<!-- ends The Legion of the Bouncy Castle -->

		<!-- urlrewritefilter -->
		<dependency>
			<groupId>org.tuckey</groupId>
			<artifactId>urlrewritefilter</artifactId>
			<version>4.0.4</version>
		</dependency>
		<!-- ends urlrewritefilter -->
		
		<!-- Java EE dependencies -->
		
		<dependency>
			<groupId>org.jboss.spec.javax.ws.rs</groupId>
			<artifactId>jboss-jaxrs-api_1.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.spec.javax.xml.ws</groupId>
			<artifactId>jboss-jaxws-api_2.2_spec</artifactId>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-web-api</artifactId>
			<version>6.0</version>
			<scope>provided</scope>
		</dependency>

		<!-- ends Java EE dependencies -->

		
		<!-- Weblogic dependencies -->

		<!-- jackson2 -->
		<!-- <dependency> -->
		<!-- <groupId>org.glassfish.jersey.media</groupId> -->
		<!-- <artifactId>jersey-media-json-jackson</artifactId> -->
		<!-- <version>2.22.1</version> -->

		<!-- </dependency> -->



		<!-- jackson2 -->


		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.5.4</version>
		</dependency>

		<!-- ends Weblogic dependencies -->
		<!-- Apache HTTP Components for HTTP Client implementation -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.1</version>
		</dependency>

		<!-- ends Apache HTTP Components for HTTP Client implementation -->
		



		<!-- swagger -->
		<!-- <dependency> -->
		<!-- <groupId>io.swagger</groupId> -->
		<!-- <artifactId>swagger-jaxrs</artifactId> -->
		<!-- <version>1.5.0</version> -->
		<!-- <exclusions> -->
		<!-- <exclusion> -->
		<!-- <artifactId>slf4j-api</artifactId> -->
		<!-- <groupId>org.slf4j</groupId> -->
		<!-- </exclusion> -->

		<!-- <exclusion> -->
		<!-- <artifactId>slf4j-log4j12</artifactId> -->
		<!-- <groupId>org.slf4j</groupId> -->
		<!-- </exclusion> -->

		<!-- </exclusions> -->
		<!-- </dependency> -->


		<!-- ends swagger -->

		<dependency>
			<groupId>net.jawr</groupId>
			<artifactId>jawr-core</artifactId>
			<version>[3,]</version>
		</dependency>



		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>3.14</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.spec.javax.jms</groupId>
			<artifactId>jboss-jms-api_1.1_spec</artifactId>
		</dependency>




	</dependencies>
	
	<build>
		<!-- Set the name of the war, used as the context root when the app is 
			deployed -->
		<finalName>${project.artifactId}</finalName>
		<plugins>


		</plugins>
	</build>
	

    

    <profiles>
       
        <profile>
            <!-- When built in OpenShift the 'openshift' profile will be used when 
                invoking mvn. -->
            <!-- Use this profile for any OpenShift specific customization your app 
                will need. -->
            <!-- By default that is to put the resulting archive into the 'deployments' 
                folder. -->
            <!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
            <id>openshift</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>${version.war.plugin}</version>
                        <configuration>
                            <outputDirectory>target</outputDirectory>
                            <warName>ROOT</warName>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Activate JBoss Product Maven repository -->
        <profile>
            <id>jboss-product-repository</id>
            <activation>
                <property>
                    <name>!jboss-product-repository</name>
                </property>
            </activation>
            <repositories>
                <repository>
                    <id>redhat-techpreview-all-repository</id>
                    <url>http://maven.repository.redhat.com/techpreview/all/</url>
                </repository>
            </repositories>
        </profile>

    </profiles>
</project>
